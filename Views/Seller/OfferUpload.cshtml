
@{
    ViewData["Title"] = "OfferUpload";
    Layout = "~/Views/Shared/_HomeLayout.cshtml";
}



<div class="d-flex flex-column justify-content-center align-items-center w-100">

    <div class="row">
        <div class="col-12">
            <h2>Upload your offer</h2>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-header">Cargar Excel </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-4">
                            <label id="labelInput" style="cursor:pointer;" class="pointer-event text-primary fw-bold" for="inputExcel"><span><i class="bi bi-file-earmark-arrow-up text-primary"></i></span> Seleccionar archivo</label>
                            <input class="form-control-file visually-hidden" type="file" id="inputExcel" onclick="mostrarBoton()" />
                        </div>
                        <div class="col-sm-4 gap-2">
                            <button id="mostrar" class="btn btn-primary text-white fw-bold visually-hidden" onclick="mostrarDatos()">Mostrar datos</button>
                            <button id="mostrar2" class="btn btn-primary text-white fw-bold visually-hidden" onclick="mostrarPromedio()">Mostrar Promedio</button>
                            <button id="mostrar3" class="btn btn-primary text-white fw-bold" onclick="insertData()">Insert</button>
                        </div>
                    </div>

                    <hr />

                    <div class="row" style=" max-height:60vh; overflow:scroll;">
                        <div class="col-sm-12">
                            <table id="tbData" class="table table-striped table-condensed" style="min-width:max-content; border:1px solid black">
                                <thead>
                                    <tr style="position:sticky; top:0px; background-color:white; height:100%">
                                        <th>ID</th>
                                        <th>Price</th>
                                        <th>WhseCode</th>
                                        <th>WhseTag</th>
                                        <th>C1</th>
                                        <th>C2</th>
                                        <th>Leaf</th>
                                        <th>Stpl</th>
                                        <th>Mic</th>
                                        <th>Str</th>
                                        <th>LRR</th>
                                        <th>CropYear</th>
                                        <th>NetWeight</th>
                                        <th>Comp</th>
                                        <th>Len</th>
                                        <th>Ext</th>
                                        <th>RD</th>
                                        <th>PlusB</th>
                                        <th>Uni</th>
                                        <th>Trash</th>
                                        <th>StorageDate</th>
                                    </tr>
                                </thead>
                                <tbody id="tableBody">
                                </tbody>
                            </table>
                            <div id="loadingSpinner" class=" d-none text-center text-primary">
                                <div class="spinner-border" role="status"></div>
                            </div>
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-sm-12">
                            <div id="xd" class="card-body visually-hidden">Promedio</div>
                            <table id="tbAvg" class="table table-striped visually-hidden">
                                <thead>
                                    <tr>
                                        <th>UHML</th>
                                        <th>UI</th>
                                        <th>Strength</th>
                                        <th>SFI</th>
                                        <th>Mic</th>
                                        <th>ColorGrade</th>
                                        <th>TrashID</th>
                                    </tr>
                                </thead>
                                <tbody id="tableBody2">
                                </tbody>
                            </table>
                        </div>

                    </div>
                </div>
            </div>
        </div>

    </div>

</div>
   



@section Scripts{
    <script>
        const input = document.getElementById("inputExcel")
        const mostrar = document.getElementById("mostrar")
        const mostrar2 = document.getElementById("mostrar2")
        const mostrar3 = document.getElementById("tbAvg")
        const mostrar4 = document.getElementById("xd")
        const enviar = document.getElementById("enviar")
        const tableBody = document.getElementById("tableBody")
        const loadingSpinner = document.getElementById("loadingSpinner")

        function mostrarBoton() {
            mostrar.classList.remove('visually-hidden');
            input.addEventListener("change", function () {
            labelInput.innerHTML = input.files[0].name;
            });
        }

        function mostrarDatos() {

            loadingSpinner.classList.remove("d-none");

            const formData = new FormData()

            formData.append("ArchivoExcel", input.files[0])

            fetch("/Seller/MostrarDatos", {
                method: "POST",
                body: formData
            })
                .then((response) => { return response.json() })
                .then((dataJson) => {
                    dataJson.forEach((item) => {
                        $("#tbData tbody").append(
                            $("<tr>").append(
                                $("<td>").text(item.ID),
                                $("<td>").text(item.Price),
                                $("<td>").text(item.WhseCode),
                                $("<td>").text(item.WhseTag),
                                $("<td>").text(item.C1),
                                $("<td>").text(item.C2),
                                $("<td>").text(item.Leaf),
                                $("<td>").text(item.Stpl),
                                $("<td>").text(item.Mic),
                                $("<td>").text(item.Str),
                                $("<td>").text(item.LRR),
                                $("<td>").text(item.CropYear),
                                $("<td>").text(item.NetWeight),
                                $("<td>").text(item.Comp),
                                $("<td>").text(item.Len),
                                $("<td>").text(item.Ext),
                                $("<td>").text(item.RD),
                                $("<td>").text(item.PlusB),
                                $("<td>").text(item.Uni),
                                $("<td>").text(item.Trash),
                                $("<td>").text(item.StorageDate)
                            )
                        )
                    })
                    console.log(dataJson)
                    mostrar.classList.add('visually-hidden');
                    loadingSpinner.classList.add("d-none");
                })            
        }

        function mostrarPromedio(){
            mostrar3.classList.remove('visually-hidden');
            mostrar4.classList.remove('visually-hidden');
            const table=document.getElementById("tableBody");
            const table2=document.getElementById("tableBody2");
            const rows=table.rows.length;
            const cols = 7;
            const proms = [];
            var sumVal=0;

            for(var j = 0; j < cols; j++){
                for(var i = 0; i < rows; i++)
                {
                    sumVal = sumVal + parseFloat(table.rows[i].cells[j].innerHTML);
                }
                proms.push( parseFloat(sumVal / rows).toFixed(2));
                sumVal=0;
             }

            for(var i = 0; i< cols;i++){
                console.log(proms[i]);
            }

            var tableContent = '<tr>';
            for (var i = 0; i < cols; i++) {
                tableContent += "<td>" + proms[i] + "</td>";
                //table2.innerHTML = proms[i];
            }
            tableContent += '</tr>';
            table2.innerHTML += tableContent;

            mostrar2.classList.add('visually-hidden');

         }
         function insertData(){
              //IntegralTradingJS.IntegralTradingJS.Repository.InsertData(600,339712,967369,3,52,4,37,48,273,4595,2019,510,'GU',113,31,705,71,823,6,1988-01-22);

            $.ajax({
            type: 'POST',
            // Note the difference in url (this works if you're actually in Index page)
            url: 'C:\Users\chooe\Documents\GitHub\IntegralTradingJSSignalR\Repository\HviService.cs\InsertData()',
            data: "{600,339712,967369,3,52,4,37,48,273,4595,2019,510,'GU',113,31,705,71,823,6,1988-01-22}",
            contentType: "application/json; charset=utf-8", 
            dataType: "json",
            success: function (data) {
              alert(data);
            },
            error: function (error) {
              alert("Error: " + error);
            }
            })
         }

         function insertData2(){
            var mysql = require('mysql');

            var con = mysql.createConnection({
              host: "104.214.62.172",
              user: "UserIntegralCottonQA",
              password: "90/-.54S4Dsas##",
              database: "IntegralCotton_dbQA"
            });

            con.connect(function(err) {
              if (err) throw err;
              console.log("Connected!");
              var sql = "INSERT INTO Matriz VALUES (1000,NULL,NULL,NULL,NULL,222501739,NULL,NULL,NULL,NULL,NULL,NULL,1.28,84,30,8.5,6.5,NULL,NULL,4.3,75.5,8.2,'41-2',NULL,NULL,1,NULL);";
              con.query(sql, function (err, result) {
                if (err) throw err;
                console.log("1 record inserted");
              });
            });
         }
        
    </script>
}