@inject IHttpContextAccessor cntx;

@{
    Layout = "~/Views/Shared/_HomeLayout.cshtml";
}

@using IntegralTradingJS.Models;
<div id="mainDiv">

    @(Html.DevExtreme().DataGrid<Offers>()
              .ID("bodyTable")
              .ShowBorders(true)
              .DataSource(d => d.Mvc().Controller("HVI").LoadAction("Get").Key("IdOffer"))
              .Height(500)
              .FilterRow(f => f.Visible(true))
              .HeaderFilter(f => f.Visible(true))
              .ShowColumnLines(true)
              .ShowRowLines(true)
              .RowAlternationEnabled(true)
              .ShowBorders(true)
              .GroupPanel(p => p.Visible(true))
              .Sorting(sorting => sorting.Mode(GridSortingMode.None))
              .Grouping(g => g.AutoExpandAll(false))
              .RemoteOperations(true)
              .LoadPanel(loadPanel => loadPanel.Enabled(true))
              .Scrolling(scrolling => scrolling.ColumnRenderingMode(GridColumnRenderingMode.Standard))
              .Paging(paging => paging.Enabled(false))
              .AllowColumnResizing(true)
              .ColumnAutoWidth(true)
              .FocusedRowEnabled(true)
              .Editing(e => e.UseIcons(true))

        .Columns(columns =>
        {
            columns.AddFor(m => m.IdOffer).Name("Offer")
                                     .Width(35)
                                     .AllowFiltering(false)
                                     .AllowSorting(false)
                                     .CellTemplate(@<text>
                                         @(Html.DevExtreme()
                                            .Button()
                                            .Hint("Ofertar")
                                            .Icon("money")
                                            .Type(ButtonType.Normal)                        
                                            .UseSubmitBehavior(false)
                                            .OnClick("function(options) {redirectID(value); options.stopPropagation; }")
                                         )
                                     </text>);    
                
            columns.AddFor(m => m.Offer);
            columns.AddFor(m => m.IdStatus).Visible(false);
            columns.AddFor(m => m.Status);
            columns.AddFor(m => m.Price);
            columns.AddFor(m => m.PriceType);
            columns.AddFor(m => m.IdUser).Visible(false);
            columns.AddFor(m => m.IdWarehouse).Visible(false);
            columns.AddFor(m => m.Warehouse);
            columns.AddFor(m => m.SellerCompany);
            columns.AddFor(m => m.C1);
            columns.AddFor(m => m.C2);
            columns.AddFor(m => m.Leaf);
            columns.AddFor(m => m.Stpl);
            columns.AddFor(m => m.Mic);
            columns.AddFor(m => m.Str);
            columns.AddFor(m => m.LRR);
            columns.AddFor(m => m.CropYear);
            columns.AddFor(m => m.NetWeight);
            columns.AddFor(m => m.Comp);
            columns.AddFor(m => m.Len);
            columns.AddFor(m => m.Ext);
            columns.AddFor(m => m.RD);
            columns.AddFor(m => m.PlusB);
            columns.AddFor(m => m.Uni);
            columns.AddFor(m => m.Trash);
            columns.AddFor(m => m.OfferDate);   
            columns.AddFor(m => m.Maturity);            
            columns.AddFor(m => m.Validity);
            columns.AddFor(m => m.ValidityType);
            

        })
    )

</div>

<div id="formDiv" class="visually-hidden container">
    
    <h1>Buyer Page</h1>


    <p class="visually-hidden" id="IdLoggerUser"> @cntx.HttpContext.Session.GetInt32("userId") </p>
    <p class="visually-hidden" id="IdLoggerCompany"> @cntx.HttpContext.Session.GetInt32("companyId") </p>   

    

    <div class="mb-3 w-25">
        <label for="offerId" class="form-label">ID de la oferta</label>
        <input readonly type="number" class="form-control" id="offerId">
    </div>

    <div class="mb-3 w-25">
        <label for="sellerPrice" class="form-label">Precio ofrecido por el vendedor</label>
        <input readonly type="number" class="form-control" id="sellerPrice">
    </div>

    <div class="mb-3 w-25">
        <label for="sellerCompany" class="form-label">Compañia del vendedor</label>
        <input readonly type="text" class="form-control" id="sellerCompany">
    </div>

    <div class="mb-3 w-25">
        <label for="sellerName" class="form-label">Nombre del vendedor</label>
        <input readonly type="text" class="form-control" id="sellerName">
    </div> 

  <div class="mb-3 w-25">
    <label for="offerPrice" class="form-label">Coloca tu oferta</label>
        <input type="text" class="form-control" id="offerPrice">
  </div>

  <div class="mb-3 w-50">
    <label for="descripcion" class="form-label">Comentarios adicionales</label>
        <textarea type="text" class="form-control" id="descripcion"></textarea>
  </div> 
  
  <button onclick="uploadtOffer()"  class="btn btn-primary fw-bold">Enviar oferta</button>

</div>

@section Scripts{
    <script src="~/lib/axios/dist/axios.min.js"></script>
    <script src="~/js/dist/browser/signalr.min.js"></script>
    <script>       

        const mainDiv = document.getElementById("mainDiv")
        const formDiv = document.getElementById("formDiv")
        const bodyTable = document.getElementById("bodyTable")
        const offerId = document.getElementById("offerId")
        const sellerPrice = document.getElementById("sellerPrice")
        const offerPrice = document.getElementById("offerPrice")
        const descripcion = document.getElementById("descripcion")
        const nestUl = document.getElementById("nestUl")
        const sellerCompany = document.getElementById("sellerCompany")
        const sellerName = document.getElementById("sellerName")
        const IdLoggerCompany = document.getElementById("IdLoggerCompany")
        const IdLoggerUser = document.getElementById("IdLoggerUser")
        let itemFound = []
        let cells = []

        function removeClass() {
            if (nestUl.classList.contains("visually-hidden")){
                nestUl.classList.remove("visually-hidden")
            }
            else{
                nestUl.classList.add("visually-hidden")
            }
        }

        function getHtml() {
            console.log(bodyTable.innerHTML)
        }

        var connection = new signalR.HubConnectionBuilder()
            .withUrl("/hvihub")
            .build();    

        $(function() {
            connection.start().then(function(){
                setInterval(() => {
                    connection.invoke("ExecuteProcedure")
                    .catch(function (err) {
                            return console.error(err.toString());
                    });
                }, 5000);

                connection.on("ReceiveStoredProcedureResult", function (result) {
                    var _store = [{
                        IdOffer : null,
                        IdWarehouse : null, 
                        C1 : null, 
                        C2 : null, 
                        Leaf : null, 
                        Stpl : null, 
                        Mic : null, 
                        Str : null, 
                        LRR : null, 
                        CropYear : null,
                        NetWeight : null, 
                        Comp : null, 
                        Len : null, 
                        Ext : null, 
                        RD : null, 
                        PlusB : null, 
                        Uni : null, 
                        Trash : null, 
                        OfferDate : null,
                        Price : null, 
                        PriceType : null, 
                        IdStatus : null,
                        Maturity : null, 
                        IdUser : null,
                        ValidityDate : null,
                        ValidityType : null
                    }];

                    result.forEach(x => {
                        _store.push({
                            IdOffer : x.idOffer,
                            IdWarehouse : x.idWarehouse,  
                            C1 : x.c1,  
                            C2 : x.c2,  
                            Leaf : x.leaf,  
                            Stpl : x.stpl,  
                            Mic : x.mic,  
                            Str : x.str,  
                            LRR : x.lRR,  
                            CropYear : x.cropYear,
                            NetWeight : x.netWeight,  
                            Comp : x.comp,  
                            Len : x.len,  
                            Ext : x.ext,  
                            RD : x.rD,  
                            PlusB : x.plusB,  
                            Uni : x.uni,  
                            Trash : x.trash,  
                            OfferDate : x.offerDate,
                            Price : x.price,  
                            PriceType : x.priceType,  
                            IdStatus : x.idStatus,
                            Maturity : x.maturity,  
                            IdUser : x.idUser,
                            ValidityDate : x.validityDate,
                            ValidityType : x.validityType                                      
                        });
                    });               

                    $("#bodyTable").dxDataGrid({
                        dataSource: _store.shift()                        
                    });                   
                    
                });
             });
        });

        function redirectID(ids) {
            offerId.value = ids
            
            itemFound = cells.find((x) => {
                return x.IdOffer == ids
            })
            console.log(cells)
            console.log(itemFound)
            sellerPrice.value = itemFound.Price
            sellerName.value = itemFound.User
            sellerCompany.value = itemFound.Warehouse

            mainDiv.classList.add("visually-hidden")
            formDiv.classList.remove("visually-hidden")        
        }

        function uploadtOffer() {   

            let bid = []
                bid.push(offerId.value)
                bid.push(IdLoggerCompany.innerHTML)
                bid.push(IdLoggerUser.innerHTML)
                bid.push(sellerPrice.value)
                bid.push(descripcion.value)
                bid.push(sellerName.value)
                bid.push(sellerCompany.value)
                bid.push(offerPrice.value)
            console.log(bid)

            let bidData = { values: bid }

            

            $.ajax({
                type: "POST",
                url: "UploadBid",
                data: bidData,
                datatype: "json",
                success: function (data) {
                    IdLoggerUser.value = ""
                    IdLoggerCompany.value = ""
                    offerId.value = ""
                    sellerPrice.value = ""
                    sellerCompany.value = ""
                    sellerName.value = ""
                    offerPrice.value = ""
                    descripcion.value = ""
                    formDiv.classList.add("visually-hidden")
                    mainDiv.classList.remove("visually-hidden")                    
                },
                error: function () {
                    Swal.fire({
                        text: 'Ha ocurrido un error',
                        icon: 'error',
                        showCancelButton: false,
                        confirmButtonText: 'Continuar'
                    })
                }
            });       
                       
        }

        document.addEventListener('DOMContentLoaded', listaDataGrid())
        function listaDataGrid(){
            $.get("/Home/GetOfferPrice", function (hviList) {
                hviList.forEach(x => {
                    cells.push({
                        IdOffer : x.IdOffer,
                        Price : x.Price,
                        User: x.IdUser,
                        Warehouse: x.IdWarehouse

                    })
                    
                });
            });
            
        }
         
    </script>
}


