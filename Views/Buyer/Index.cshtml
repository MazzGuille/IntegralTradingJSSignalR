@inject IHttpContextAccessor cntx;
@{
    Layout = "~/Views/Shared/_HomeLayout.cshtml";
}
@using IntegralTradingJS.Models;
<div id="mainDiv" class="container d-flex flex-column align-items-center">
    <h1>Pujas</h1>
    <h5>Pujas realizadas por el usuario:</h5>

    @(
        Html.DevExtreme().DataGrid<BuyerBid>()
                  .ID("bodyTable")
                  .ShowBorders(true)
                  .DataSource(d => d.Mvc().Controller("BuyerAPI").LoadAction("GetBuyerBid").Key("IdBid"))
                  .Height(440)
                  .Width(1100)
                  .FilterRow(f => f.Visible(true))
                  .HeaderFilter(f => f.Visible(true))
                  .ShowColumnLines(true)
                  .ShowRowLines(true)
                  .RowAlternationEnabled(true)
                  .ShowBorders(true)
                  .GroupPanel(p => p.Visible(true))
                  .Sorting(sorting => sorting.Mode(GridSortingMode.None))
                  .Grouping(g => g.AutoExpandAll(false))
                  .RemoteOperations(true)
                  .LoadPanel(loadPanel => loadPanel.Enabled(true))
                  .Scrolling(scrolling => scrolling.ColumnRenderingMode(GridColumnRenderingMode.Standard))
                  .Paging(paging => paging.Enabled(false))
                  .AllowColumnResizing(true)
                  .ColumnAutoWidth(true)
                  .FocusedRowEnabled(true)
                  .Editing(e => e.UseIcons(true))

        .Columns(columns =>
        {
            columns.AddFor(m => m.IdBid).Name("offerId")
                .Width(35)
                .AllowFiltering(false)
                .AllowSorting(false)
                .CellTemplate(@<text>
                    @(Html.DevExtreme()
                        .Button()
                        .Hint("Acciones")
                        .Icon("money")
                        .Type(ButtonType.Normal)
                        .UseSubmitBehavior(false)
                        .OnClick("function(options) {EliminateBid(value); options.stopPropagation; }")
        )
                        </text>
        );
                columns.AddFor(m => m.IdOffer);
                columns.AddFor(m => m.IdBid);
                columns.AddFor(m => m.BidStatus);
            columns.AddFor(m => m.BidFromBuyer);
            columns.AddFor(m => m.Comments);
            columns.AddFor(m => m.CompanyName);
            columns.AddFor(m => m.UserFullName);
            columns.AddFor(m => m.SellerCompany);
            columns.AddFor(m => m.SellerFullName);
            columns.AddFor(m => m.SellerOfferPrice);
            columns.AddFor(m => m.IdStatus).Visible(false);

        })
    )

</div>
<!--  <button onclick="getUserBids()"  class="btn btn-primary fw-bold">Ofertas</button>
  <table id="tbBid" class="table table-striped">
        <thead class="bg-light">
            <tr>
                <th>Oferta</th>
                <th>Empresa</th>
                <th>Usuario</th>
                <th>Precio</th>
                <th>Status</th>
                <th>Comentarios</th>
                <th>Fecha</th>
            </tr>
        </thead>
        <tbody id="tableBody">
        </tbody>
    </table>-->


@section Scripts{
    <script src="~/lib/axios/dist/axios.min.js"></script>
    <script>
        const nestUl = document.getElementById("nestUl")

        var IdStatus
        var bidArray = []
        var itemFound = []
        var tempArrayA = []
        var tempArrayR = []
        var offerNum
        var statusOfBid

        function removeClass() {
            if (nestUl.classList.contains("visually-hidden")){
                nestUl.classList.remove("visually-hidden")
            }
            else{
                nestUl.classList.add("visually-hidden")
            }
        }

        document.addEventListener('DOMContentLoaded', listaDataGrid())

        function listaDataGrid() {
            $.get("/Buyer/GetBuyerBid", function (data) {
                data.forEach(x => {
                    bidArray.push({
                        IdOffer: x.IdOffer,
                        IdBid: x.IdBid,
                        Comments: x.Comments,
                        BidStatus: x.BidStatus
                    })
                });
                console.log(data)
            });
           
        }


        function EliminateBid(id){

            itemFound = bidArray.find((x) => {
                return x.IdBid == id
            })

            offerNum = itemFound.IdOffer

            statusOfBid = itemFound.BidStatus

            console.log("Bid Status: " + statusOfBid)


            if (statusOfBid === "Aprobada"){

                tempArrayR.push(id)
                tempArrayR.push(3)
                var arrayToSendreject = { values: tempArrayR }

                Swal.fire({
                    title: 'Oferta ' + offerNum,
                    text: 'Que desea hacer',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonText: 'Confirmar pago',
                }).then((resultado) => {
                    if (resultado.isConfirmed) {
                        $.ajax({
                            type: "PUT",
                            url: "Seller/UpdateStatus",
                            data: arrayToSendreject,
                            datatype: "json",
                            success: function (data) {
                                location.reload()
                            },
                            error: function (data) {
                                Swal.fire({
                                    text: 'Ha ocurrido un error',
                                    icon: 'error',
                                    showCancelButton: false,
                                    confirmButtonText: 'Continuar'
                                })
                            }
                        });
                    }

                })
            }
            else if (statusOfBid === "Pagada") {
                Swal.fire({
                    title: 'Oferta ' + offerNum,
                    text: 'A espera de confirmacion del vendedor',
                    icon: 'succes',
                    showCancelButton: false
                })
            }
            else if (statusOfBid === "Recibida") {
                Swal.fire({
                    title: 'Oferta ' + offerNum,
                    text: 'Operacion finalizada',
                    icon: 'succes',
                    showCancelButton: false
                })
            }                    
            else if (statusOfBid === "PagoConfirmado") {

                tempArrayR.push(id)
                tempArrayR.push(5)
                var arrayToSendreject = { values: tempArrayR }

                Swal.fire({
                    title: 'Oferta ' + offerNum,
                    text: 'Que desea hacer',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonText: 'Confirmar recepcion de mercaderia',
                }).then((resultado) => {
                    if (resultado.isConfirmed) {
                        $.ajax({
                            type: "PUT",
                            url: "Seller/UpdateStatus",
                            data: arrayToSendreject,
                            datatype: "json",
                            success: function (data) {
                                location.reload()
                            },
                            error: function (data) {
                                Swal.fire({
                                    text: 'Ha ocurrido un error',
                                    icon: 'error',
                                    showCancelButton: false,
                                    confirmButtonText: 'Continuar'
                                })
                            }
                        });
                    }

                })

            }
            else if (statusOfBid === "Nueva" || "Rechazada") {
                tempArrayR.push(id)
                tempArrayR.push(8)
                var arrayToSendreject = { values: tempArrayR }

                Swal.fire({
                    title: 'Oferta ' + offerNum,
                    text: 'Que desea hacer',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonText: 'Eliminar oferta',
                }).then((resultado) => {
                    if (resultado.isConfirmed) {
                        $.ajax({
                            type: "PUT",
                            url: "Seller/UpdateStatus",
                            data: arrayToSendreject,
                            datatype: "json",
                            success: function (data) {
                                location.reload()
                            },
                            error: function (data) {
                                Swal.fire({
                                    text: 'Ha ocurrido un error',
                                    icon: 'error',
                                    showCancelButton: false,
                                    confirmButtonText: 'Continuar'
                                })
                            }
                        });
                    }

                })
            }                 
        }       
        
        
        
        
        //function changeStatus(){
        //    fetch("/Buyer/UpdateStatus", {
        //        method:"PUT",               
        //        body: FormData
        //    });

        //    window.location.href = '/Home/HviAPI'
        //}




        //function getUserBids(){
        //    $.get("/Buyer/GetUserBids", function(data){               
        //        console.log(data);
        //        document.getElementById("tableBody").innerHTML = "";
        //    data.forEach(x => {
        //        var tr = document.createElement("tr");
        //        var filaCelda = `<tr>
        //                         <td>${x.IdOffer}</td>
        //                         <td>${x.Id_company}</td>
        //                         <td>${x.IdUsuario}</td>
        //                         <td>${x.Price}</td>
        //                         <td>${x.IdBidStatusFK}</td>
        //                         <td>${x.Comments}</td>
        //                         <td>${x.Date}</td>
        //                        </tr>`;
        //        tr.innerHTML = filaCelda;
        //        document.getElementById("tableBody").append(tr);
        //    })
        //    })
        //}
    </script>
}